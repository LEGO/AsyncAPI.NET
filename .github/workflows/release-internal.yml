name: Publish internal NuGet package
on:
  push:
    branches: [ main ]
    paths:
      - 'src/LEGO.AsyncAPI/**'
      - 'src/LEGO.AsyncAPI.Readers/**'
      - 'src/LEGO.AsyncAPI.Bindings/**'
      - ".github/workflows/release-internal.yml"
      - '!**/*.md' 
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check release
    environment: AsyncAPI 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3
      with:
        dry_run: true
        ci: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      trigger_release: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_published == 'true' && steps.semantic.outputs.new_release_version }}

  pre-release:
    runs-on: ubuntu-latest
    name: Publish NuGet packages
    needs: check
    environment: AsyncAPI 
    strategy:
      matrix:
        package-name: [ "LEGO.AsyncAPI", "LEGO.AsyncAPI.Readers", "LEGO.AsyncAPI.Bindings" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        
      - name: Setup .NET Core @ Latest
        if: needs.check.outputs.trigger_release == 'true'
        uses: actions/setup-dotnet@v1

      - name: Build ${{ matrix.package-name }} project and pack NuGet package
        if: needs.check.outputs.trigger_release == 'true'
        run: dotnet pack src/${{ matrix.package-name }}/${{ matrix.package-name }}.csproj -c Release -o out-${{ matrix.package-name }} -p:PackageVersion=${{ needs.check.outputs.version }}-beta

      - name: Push generated package to GitHub Packages registry
        if: needs.check.outputs.trigger_release == 'true'
        run: dotnet nuget push out-${{ matrix.package-name }}/*.nupkg -s https://api.nuget.org/v3/index.json --skip-duplicate -n --api-key ${{secrets.NUGET}}
