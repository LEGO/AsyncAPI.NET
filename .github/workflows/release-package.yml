name: Publish a NuGet package
on:
  push:
    branches: [ main ]
    paths:
      - 'src/LEGO.AsyncAPI/**'
      - 'src/LEGO.AsyncAPI.Readers/**'
      - ".github/workflows/release-package.yml"
      - '!**/*.md' 
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    name: Publish NuGet packages
    strategy:
      matrix:
        package-name: [ "LEGO.AsyncAPI", "LEGO.AsyncAPI.Readers"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        id: semantic   # Need an `id` for output variables
        with:
          extra_plugins: |
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup .NET Core @ Latest
        uses: actions/setup-dotnet@v1
        with:
          source-url: https://nuget.pkg.github.com/LEGO/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}    

      - name: Build ${{ matrix.package-name }} project and pack NuGet package
        if: steps.semantic.outputs.new_release_published == 'true'
        run: dotnet pack src/${{ matrix.package-name }}/${{ matrix.package-name }}.csproj -c Release -o out-${{ matrix.package-name }} -p:PackageVersion=${{ steps.semantic.outputs.new_release_version }}-prerelease

      - name: Push generated package to GitHub Packages registry
        if: steps.semantic.outputs.new_release_published == 'true'
        run: dotnet nuget push out-${{ matrix.package-name }}/*.nupkg --skip-duplicate -n --api-key ${{secrets.GITHUB_TOKEN}}
        
      - name: Create Pull Request
        if: steps.semantic.outputs.new_release_published == 'true'
        id: pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'chore: update Changelog'
          base: main
          add-paths: |
            CHANGELOG.md
